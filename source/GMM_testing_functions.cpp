#include "define.h"

data_type GMM_test1(void){
	data_type input[INPUT_DEPTH] = {14.151220496789,47.454596310295,53.961569152495,49.192148348788,16.475781691182,16.269967285869,14.737190467031,50.898556286678,16.079905635544,15.137034179200,14.950776748154,14.555217336074,47.586226431276,15.124072299443,51.204690856086,15.173560277214,18.729110023423,53.854118147522,52.164519573341,14.660659766189,16.342740750267,48.258377449684,14.974085893929,19.539873183333,17.112079917329,53.750329857351,18.258844403380,52.078925788275,55.242069743264,49.329963142527,16.911747848911,48.586085630130,46.166582295940,48.461461782806,14.625934519030,48.031702294963,17.864795292577,15.184636966442,51.860620859623,49.506505029874,15.575046452378,49.954183109161,18.482401919649,16.800377221905,53.289159878769,17.533438128121,51.093074164144,14.798005314404,15.727894900857,47.896205831717,46.836375193986,14.974658499294,16.754355851261,16.813126592968,18.811973656365,16.125639009249,16.319821612765,16.133130475571,15.645815325361,47.959257430490,14.794651735559,15.039496089307,47.715277338648,16.292914471412,52.471429799794,14.587400880866,51.196251473859,15.808955110960,50.165330269878,14.654312574415,51.829477886651,48.309936681925,51.855229997897,51.195168288521,13.848392654607,16.077345876106,15.782352145681,48.163254516647,51.232584188683,19.420798462542,50.587200856152,50.211489693907,14.341445477764,16.142324872446,49.118166116332,18.529415726448,50.551490359777,15.981646587388,47.796856091868,15.032246637422,14.250804226909,50.545898935466,51.342839410461,47.700052578218,15.589066388948,48.015648330821,16.425950238432,50.488325849342,51.891123127578,50.772895443838};
	data_type output[INPUT_DEPTH], output2[INPUT_DEPTH];
data_type sum_output=0;
	//for (int x=0; x<INPUT_DEPTH; x++)   output[x]=input[x]+x;

	for (int x=0; x<INPUT_DEPTH; x++)   output[x]=sqrt(input[x]);

	for (int x=0; x<INPUT_DEPTH; x++)   output2[x]=pow(output[x],2);
	for (int x=0; x<INPUT_DEPTH; x++)   output[x]=pow(output2[x],2);
	for (int x=0; x<INPUT_DEPTH; x++) sum_output+= output[x];

	return sum_output;
}
