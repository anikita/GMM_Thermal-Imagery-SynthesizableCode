#include <stdio.h>
#include <stdlib.h> 
#include "IMM.h"
#include <omp.h>
#include "IMM_Adaptation.h"

using namespace std;
	#include <time.h>
	#include <queue>          // std::queue
	#include <iostream>

#ifdef TESTING

#ifndef LINUX
	#include <Windows.h>


double PCFreq = 0.0;
__int64 CounterStart = 0;

void StartCounter()
{
    LARGE_INTEGER li;
    if(!QueryPerformanceFrequency(&li))
	std::cout << "QueryPerformanceFrequency failed!\n";

    PCFreq = double(li.QuadPart)/1000.0;

    QueryPerformanceCounter(&li);
    CounterStart = li.QuadPart;
}
double GetCounter()
{
    LARGE_INTEGER li;
    QueryPerformanceCounter(&li);
    return double(li.QuadPart-CounterStart)/PCFreq;
}


#else // Linux dependencies Here
	#include <sys/time.h>

#endif

 


#endif
//data_type GMM_test1(void);

data_type IMM_top_level(int THREAD_N){

data_type input0[INPUT_DEPTH] = {14.151220496789,47.454596310295,53.961569152495,49.192148348788,16.475781691182,16.269967285869,14.737190467031,50.898556286678,16.079905635544,15.137034179200,14.950776748154,14.555217336074,47.586226431276,15.124072299443,51.204690856086,15.173560277214,18.729110023423,53.854118147522,52.164519573341,14.660659766189,16.342740750267,48.258377449684,14.974085893929,19.539873183333,17.112079917329,53.750329857351,18.258844403380,52.078925788275,55.242069743264,49.329963142527,16.911747848911,48.586085630130,46.166582295940,48.461461782806,14.625934519030,48.031702294963,17.864795292577,15.184636966442,51.860620859623,49.506505029874,15.575046452378,49.954183109161,18.482401919649,16.800377221905,53.289159878769,17.533438128121,51.093074164144,14.798005314404,15.727894900857,47.896205831717,46.836375193986,14.974658499294,16.754355851261,16.813126592968,18.811973656365,16.125639009249,16.319821612765,16.133130475571,15.645815325361,47.959257430490,14.794651735559,15.039496089307,47.715277338648,16.292914471412,52.471429799794,14.587400880866,51.196251473859,15.808955110960,50.165330269878,14.654312574415,51.829477886651,48.309936681925,51.855229997897,51.195168288521,13.848392654607,16.077345876106,15.782352145681,48.163254516647,51.232584188683,19.420798462542,50.587200856152,50.211489693907,14.341445477764,16.142324872446,49.118166116332,18.529415726448,50.551490359777,15.981646587388,47.796856091868,15.032246637422,14.250804226909,50.545898935466,51.342839410461,47.700052578218,15.589066388948,48.015648330821,16.425950238432,50.488325849342,51.891123127578,50.772895443838};

//data_type input0[INPUT_DEPTH] = {14.151220496789,47.454596310295,53.961569152495,49.192148348788,16.475781691182,16.269967285869,14.737190467031,50.898556286678,16.079905635544,15.137034179200,14.950776748154,14.555217336074,47.586226431276,15.124072299443,51.204690856086,15.173560277214,18.729110023423,53.854118147522,52.164519573341,14.660659766189,16.342740750267,48.258377449684,14.974085893929,19.539873183333,17.112079917329,53.750329857351,18.258844403380,52.078925788275,55.242069743264,49.329963142527,16.911747848911,48.586085630130,46.166582295940,48.461461782806,14.625934519030,48.031702294963,17.864795292577,15.184636966442,51.860620859623,49.506505029874,15.575046452378,49.954183109161,18.482401919649,16.800377221905,53.289159878769,17.533438128121,51.093074164144,14.798005314404,15.727894900857,47.896205831717,46.836375193986,14.974658499294,16.754355851261,16.813126592968,18.811973656365,16.125639009249,16.319821612765,16.133130475571,15.645815325361,47.959257430490,14.794651735559,15.039496089307,47.715277338648,16.292914471412,52.471429799794,14.587400880866,51.196251473859,15.808955110960,50.165330269878,14.654312574415,51.829477886651,48.309936681925,51.855229997897,51.195168288521,13.848392654607,16.077345876106,15.782352145681,48.163254516647,51.232584188683,19.420798462542,50.587200856152,50.211489693907,14.341445477764,16.142324872446,49.118166116332,18.529415726448,50.551490359777,15.981646587388,47.796856091868,15.032246637422,14.250804226909,50.545898935466,51.342839410461,47.700052578218,15.589066388948,48.015648330821,16.425950238432,50.488325849342,51.891123127578,50.772895443838};
/*
data_type input1[INPUT_DEPTH] = {24.151220496789,47.454596310295,53.961569152495,49.192148348788,16.475781691182,16.269967285869,14.737190467031,50.898556286678,16.079905635544,15.137034179200,14.950776748154,14.555217336074,47.586226431276,15.124072299443,51.204690856086,15.173560277214,18.729110023423,53.854118147522,52.164519573341,14.660659766189,16.342740750267,48.258377449684,14.974085893929,19.539873183333,17.112079917329,53.750329857351,18.258844403380,52.078925788275,55.242069743264,49.329963142527,16.911747848911,48.586085630130,46.166582295940,48.461461782806,14.625934519030,48.031702294963,17.864795292577,15.184636966442,51.860620859623,49.506505029874,15.575046452378,49.954183109161,18.482401919649,16.800377221905,53.289159878769,17.533438128121,51.093074164144,14.798005314404,15.727894900857,47.896205831717,46.836375193986,14.974658499294,16.754355851261,16.813126592968,18.811973656365,16.125639009249,16.319821612765,16.133130475571,15.645815325361,47.959257430490,14.794651735559,15.039496089307,47.715277338648,16.292914471412,52.471429799794,14.587400880866,51.196251473859,15.808955110960,50.165330269878,14.654312574415,51.829477886651,48.309936681925,51.855229997897,51.195168288521,13.848392654607,16.077345876106,15.782352145681,48.163254516647,51.232584188683,19.420798462542,50.587200856152,50.211489693907,14.341445477764,16.142324872446,49.118166116332,18.529415726448,50.551490359777,15.981646587388,47.796856091868,15.032246637422,14.250804226909,50.545898935466,51.342839410461,47.700052578218,15.589066388948,48.015648330821,16.425950238432,50.488325849342,51.891123127578,50.772895443838};
data_type input2[INPUT_DEPTH] = {34.151220496789,47.454596310295,53.961569152495,49.192148348788,16.475781691182,16.269967285869,14.737190467031,50.898556286678,16.079905635544,15.137034179200,14.950776748154,14.555217336074,47.586226431276,15.124072299443,51.204690856086,15.173560277214,18.729110023423,53.854118147522,52.164519573341,14.660659766189,16.342740750267,48.258377449684,14.974085893929,19.539873183333,17.112079917329,53.750329857351,18.258844403380,52.078925788275,55.242069743264,49.329963142527,16.911747848911,48.586085630130,46.166582295940,48.461461782806,14.625934519030,48.031702294963,17.864795292577,15.184636966442,51.860620859623,49.506505029874,15.575046452378,49.954183109161,18.482401919649,16.800377221905,53.289159878769,17.533438128121,51.093074164144,14.798005314404,15.727894900857,47.896205831717,46.836375193986,14.974658499294,16.754355851261,16.813126592968,18.811973656365,16.125639009249,16.319821612765,16.133130475571,15.645815325361,47.959257430490,14.794651735559,15.039496089307,47.715277338648,16.292914471412,52.471429799794,14.587400880866,51.196251473859,15.808955110960,50.165330269878,14.654312574415,51.829477886651,48.309936681925,51.855229997897,51.195168288521,13.848392654607,16.077345876106,15.782352145681,48.163254516647,51.232584188683,19.420798462542,50.587200856152,50.211489693907,14.341445477764,16.142324872446,49.118166116332,18.529415726448,50.551490359777,15.981646587388,47.796856091868,15.032246637422,14.250804226909,50.545898935466,51.342839410461,47.700052578218,15.589066388948,48.015648330821,16.425950238432,50.488325849342,51.891123127578,50.772895443838};
data_type input3[INPUT_DEPTH] = {44.151220496789,47.454596310295,53.961569152495,49.192148348788,16.475781691182,16.269967285869,14.737190467031,50.898556286678,16.079905635544,15.137034179200,14.950776748154,14.555217336074,47.586226431276,15.124072299443,51.204690856086,15.173560277214,18.729110023423,53.854118147522,52.164519573341,14.660659766189,16.342740750267,48.258377449684,14.974085893929,19.539873183333,17.112079917329,53.750329857351,18.258844403380,52.078925788275,55.242069743264,49.329963142527,16.911747848911,48.586085630130,46.166582295940,48.461461782806,14.625934519030,48.031702294963,17.864795292577,15.184636966442,51.860620859623,49.506505029874,15.575046452378,49.954183109161,18.482401919649,16.800377221905,53.289159878769,17.533438128121,51.093074164144,14.798005314404,15.727894900857,47.896205831717,46.836375193986,14.974658499294,16.754355851261,16.813126592968,18.811973656365,16.125639009249,16.319821612765,16.133130475571,15.645815325361,47.959257430490,14.794651735559,15.039496089307,47.715277338648,16.292914471412,52.471429799794,14.587400880866,51.196251473859,15.808955110960,50.165330269878,14.654312574415,51.829477886651,48.309936681925,51.855229997897,51.195168288521,13.848392654607,16.077345876106,15.782352145681,48.163254516647,51.232584188683,19.420798462542,50.587200856152,50.211489693907,14.341445477764,16.142324872446,49.118166116332,18.529415726448,50.551490359777,15.981646587388,47.796856091868,15.032246637422,14.250804226909,50.545898935466,51.342839410461,47.700052578218,15.589066388948,48.015648330821,16.425950238432,50.488325849342,51.891123127578,50.772895443838};

data_type input4[INPUT_DEPTH] = {54.151220496789,47.454596310295,53.961569152495,49.192148348788,16.475781691182,16.269967285869,14.737190467031,50.898556286678,16.079905635544,15.137034179200,14.950776748154,14.555217336074,47.586226431276,15.124072299443,51.204690856086,15.173560277214,18.729110023423,53.854118147522,52.164519573341,14.660659766189,16.342740750267,48.258377449684,14.974085893929,19.539873183333,17.112079917329,53.750329857351,18.258844403380,52.078925788275,55.242069743264,49.329963142527,16.911747848911,48.586085630130,46.166582295940,48.461461782806,14.625934519030,48.031702294963,17.864795292577,15.184636966442,51.860620859623,49.506505029874,15.575046452378,49.954183109161,18.482401919649,16.800377221905,53.289159878769,17.533438128121,51.093074164144,14.798005314404,15.727894900857,47.896205831717,46.836375193986,14.974658499294,16.754355851261,16.813126592968,18.811973656365,16.125639009249,16.319821612765,16.133130475571,15.645815325361,47.959257430490,14.794651735559,15.039496089307,47.715277338648,16.292914471412,52.471429799794,14.587400880866,51.196251473859,15.808955110960,50.165330269878,14.654312574415,51.829477886651,48.309936681925,51.855229997897,51.195168288521,13.848392654607,16.077345876106,15.782352145681,48.163254516647,51.232584188683,19.420798462542,50.587200856152,50.211489693907,14.341445477764,16.142324872446,49.118166116332,18.529415726448,50.551490359777,15.981646587388,47.796856091868,15.032246637422,14.250804226909,50.545898935466,51.342839410461,47.700052578218,15.589066388948,48.015648330821,16.425950238432,50.488325849342,51.891123127578,50.772895443838};
data_type input5[INPUT_DEPTH] = {24.151220496789,47.454596310295,53.961569152495,49.192148348788,16.475781691182,16.269967285869,14.737190467031,50.898556286678,16.079905635544,15.137034179200,14.950776748154,14.555217336074,47.586226431276,15.124072299443,51.204690856086,15.173560277214,18.729110023423,53.854118147522,52.164519573341,14.660659766189,16.342740750267,48.258377449684,14.974085893929,19.539873183333,17.112079917329,53.750329857351,18.258844403380,52.078925788275,55.242069743264,49.329963142527,16.911747848911,48.586085630130,46.166582295940,48.461461782806,14.625934519030,48.031702294963,17.864795292577,15.184636966442,51.860620859623,49.506505029874,15.575046452378,49.954183109161,18.482401919649,16.800377221905,53.289159878769,17.533438128121,51.093074164144,14.798005314404,15.727894900857,47.896205831717,46.836375193986,14.974658499294,16.754355851261,16.813126592968,18.811973656365,16.125639009249,16.319821612765,16.133130475571,15.645815325361,47.959257430490,14.794651735559,15.039496089307,47.715277338648,16.292914471412,52.471429799794,14.587400880866,51.196251473859,15.808955110960,50.165330269878,14.654312574415,51.829477886651,48.309936681925,51.855229997897,51.195168288521,13.848392654607,16.077345876106,15.782352145681,48.163254516647,51.232584188683,19.420798462542,50.587200856152,50.211489693907,14.341445477764,16.142324872446,49.118166116332,18.529415726448,50.551490359777,15.981646587388,47.796856091868,15.032246637422,14.250804226909,50.545898935466,51.342839410461,47.700052578218,15.589066388948,48.015648330821,16.425950238432,50.488325849342,51.891123127578,50.772895443838};
data_type input6[INPUT_DEPTH] = {54.151220496789,47.454596310295,53.961569152495,49.192148348788,16.475781691182,16.269967285869,14.737190467031,50.898556286678,16.079905635544,15.137034179200,14.950776748154,14.555217336074,47.586226431276,15.124072299443,51.204690856086,15.173560277214,18.729110023423,53.854118147522,52.164519573341,14.660659766189,16.342740750267,48.258377449684,14.974085893929,19.539873183333,17.112079917329,53.750329857351,18.258844403380,52.078925788275,55.242069743264,49.329963142527,16.911747848911,48.586085630130,46.166582295940,48.461461782806,14.625934519030,48.031702294963,17.864795292577,15.184636966442,51.860620859623,49.506505029874,15.575046452378,49.954183109161,18.482401919649,16.800377221905,53.289159878769,17.533438128121,51.093074164144,14.798005314404,15.727894900857,47.896205831717,46.836375193986,14.974658499294,16.754355851261,16.813126592968,18.811973656365,16.125639009249,16.319821612765,16.133130475571,15.645815325361,47.959257430490,14.794651735559,15.039496089307,47.715277338648,16.292914471412,52.471429799794,14.587400880866,51.196251473859,15.808955110960,50.165330269878,14.654312574415,51.829477886651,48.309936681925,51.855229997897,51.195168288521,13.848392654607,16.077345876106,15.782352145681,48.163254516647,51.232584188683,19.420798462542,50.587200856152,50.211489693907,14.341445477764,16.142324872446,49.118166116332,18.529415726448,50.551490359777,15.981646587388,47.796856091868,15.032246637422,14.250804226909,50.545898935466,51.342839410461,47.700052578218,15.589066388948,48.015648330821,16.425950238432,50.488325849342,51.891123127578,50.772895443838};
data_type input7[INPUT_DEPTH] = {64.151220496789,47.454596310295,53.961569152495,49.192148348788,16.475781691182,16.269967285869,14.737190467031,50.898556286678,16.079905635544,15.137034179200,14.950776748154,14.555217336074,47.586226431276,15.124072299443,51.204690856086,15.173560277214,18.729110023423,53.854118147522,52.164519573341,14.660659766189,16.342740750267,48.258377449684,14.974085893929,19.539873183333,17.112079917329,53.750329857351,18.258844403380,52.078925788275,55.242069743264,49.329963142527,16.911747848911,48.586085630130,46.166582295940,48.461461782806,14.625934519030,48.031702294963,17.864795292577,15.184636966442,51.860620859623,49.506505029874,15.575046452378,49.954183109161,18.482401919649,16.800377221905,53.289159878769,17.533438128121,51.093074164144,14.798005314404,15.727894900857,47.896205831717,46.836375193986,14.974658499294,16.754355851261,16.813126592968,18.811973656365,16.125639009249,16.319821612765,16.133130475571,15.645815325361,47.959257430490,14.794651735559,15.039496089307,47.715277338648,16.292914471412,52.471429799794,14.587400880866,51.196251473859,15.808955110960,50.165330269878,14.654312574415,51.829477886651,48.309936681925,51.855229997897,51.195168288521,13.848392654607,16.077345876106,15.782352145681,48.163254516647,51.232584188683,19.420798462542,50.587200856152,50.211489693907,14.341445477764,16.142324872446,49.118166116332,18.529415726448,50.551490359777,15.981646587388,47.796856091868,15.032246637422,14.250804226909,50.545898935466,51.342839410461,47.700052578218,15.589066388948,48.015648330821,16.425950238432,50.488325849342,51.891123127578,50.772895443838};

data_type input8[INPUT_DEPTH] = {74.151220496789,47.454596310295,53.961569152495,49.192148348788,16.475781691182,16.269967285869,14.737190467031,50.898556286678,16.079905635544,15.137034179200,14.950776748154,14.555217336074,47.586226431276,15.124072299443,51.204690856086,15.173560277214,18.729110023423,53.854118147522,52.164519573341,14.660659766189,16.342740750267,48.258377449684,14.974085893929,19.539873183333,17.112079917329,53.750329857351,18.258844403380,52.078925788275,55.242069743264,49.329963142527,16.911747848911,48.586085630130,46.166582295940,48.461461782806,14.625934519030,48.031702294963,17.864795292577,15.184636966442,51.860620859623,49.506505029874,15.575046452378,49.954183109161,18.482401919649,16.800377221905,53.289159878769,17.533438128121,51.093074164144,14.798005314404,15.727894900857,47.896205831717,46.836375193986,14.974658499294,16.754355851261,16.813126592968,18.811973656365,16.125639009249,16.319821612765,16.133130475571,15.645815325361,47.959257430490,14.794651735559,15.039496089307,47.715277338648,16.292914471412,52.471429799794,14.587400880866,51.196251473859,15.808955110960,50.165330269878,14.654312574415,51.829477886651,48.309936681925,51.855229997897,51.195168288521,13.848392654607,16.077345876106,15.782352145681,48.163254516647,51.232584188683,19.420798462542,50.587200856152,50.211489693907,14.341445477764,16.142324872446,49.118166116332,18.529415726448,50.551490359777,15.981646587388,47.796856091868,15.032246637422,14.250804226909,50.545898935466,51.342839410461,47.700052578218,15.589066388948,48.015648330821,16.425950238432,50.488325849342,51.891123127578,50.772895443838};
data_type input9[INPUT_DEPTH] = {84.151220496789,47.454596310295,53.961569152495,49.192148348788,16.475781691182,16.269967285869,14.737190467031,50.898556286678,16.079905635544,15.137034179200,14.950776748154,14.555217336074,47.586226431276,15.124072299443,51.204690856086,15.173560277214,18.729110023423,53.854118147522,52.164519573341,14.660659766189,16.342740750267,48.258377449684,14.974085893929,19.539873183333,17.112079917329,53.750329857351,18.258844403380,52.078925788275,55.242069743264,49.329963142527,16.911747848911,48.586085630130,46.166582295940,48.461461782806,14.625934519030,48.031702294963,17.864795292577,15.184636966442,51.860620859623,49.506505029874,15.575046452378,49.954183109161,18.482401919649,16.800377221905,53.289159878769,17.533438128121,51.093074164144,14.798005314404,15.727894900857,47.896205831717,46.836375193986,14.974658499294,16.754355851261,16.813126592968,18.811973656365,16.125639009249,16.319821612765,16.133130475571,15.645815325361,47.959257430490,14.794651735559,15.039496089307,47.715277338648,16.292914471412,52.471429799794,14.587400880866,51.196251473859,15.808955110960,50.165330269878,14.654312574415,51.829477886651,48.309936681925,51.855229997897,51.195168288521,13.848392654607,16.077345876106,15.782352145681,48.163254516647,51.232584188683,19.420798462542,50.587200856152,50.211489693907,14.341445477764,16.142324872446,49.118166116332,18.529415726448,50.551490359777,15.981646587388,47.796856091868,15.032246637422,14.250804226909,50.545898935466,51.342839410461,47.700052578218,15.589066388948,48.015648330821,16.425950238432,50.488325849342,51.891123127578,50.772895443838};
data_type input10[INPUT_DEPTH] = {94.151220496789,47.454596310295,53.961569152495,49.192148348788,16.475781691182,16.269967285869,14.737190467031,50.898556286678,16.079905635544,15.137034179200,14.950776748154,14.555217336074,47.586226431276,15.124072299443,51.204690856086,15.173560277214,18.729110023423,53.854118147522,52.164519573341,14.660659766189,16.342740750267,48.258377449684,14.974085893929,19.539873183333,17.112079917329,53.750329857351,18.258844403380,52.078925788275,55.242069743264,49.329963142527,16.911747848911,48.586085630130,46.166582295940,48.461461782806,14.625934519030,48.031702294963,17.864795292577,15.184636966442,51.860620859623,49.506505029874,15.575046452378,49.954183109161,18.482401919649,16.800377221905,53.289159878769,17.533438128121,51.093074164144,14.798005314404,15.727894900857,47.896205831717,46.836375193986,14.974658499294,16.754355851261,16.813126592968,18.811973656365,16.125639009249,16.319821612765,16.133130475571,15.645815325361,47.959257430490,14.794651735559,15.039496089307,47.715277338648,16.292914471412,52.471429799794,14.587400880866,51.196251473859,15.808955110960,50.165330269878,14.654312574415,51.829477886651,48.309936681925,51.855229997897,51.195168288521,13.848392654607,16.077345876106,15.782352145681,48.163254516647,51.232584188683,19.420798462542,50.587200856152,50.211489693907,14.341445477764,16.142324872446,49.118166116332,18.529415726448,50.551490359777,15.981646587388,47.796856091868,15.032246637422,14.250804226909,50.545898935466,51.342839410461,47.700052578218,15.589066388948,48.015648330821,16.425950238432,50.488325849342,51.891123127578,50.772895443838};
data_type input11[INPUT_DEPTH] = {64.151220496789,47.454596310295,53.961569152495,49.192148348788,16.475781691182,16.269967285869,14.737190467031,50.898556286678,16.079905635544,15.137034179200,14.950776748154,14.555217336074,47.586226431276,15.124072299443,51.204690856086,15.173560277214,18.729110023423,53.854118147522,52.164519573341,14.660659766189,16.342740750267,48.258377449684,14.974085893929,19.539873183333,17.112079917329,53.750329857351,18.258844403380,52.078925788275,55.242069743264,49.329963142527,16.911747848911,48.586085630130,46.166582295940,48.461461782806,14.625934519030,48.031702294963,17.864795292577,15.184636966442,51.860620859623,49.506505029874,15.575046452378,49.954183109161,18.482401919649,16.800377221905,53.289159878769,17.533438128121,51.093074164144,14.798005314404,15.727894900857,47.896205831717,46.836375193986,14.974658499294,16.754355851261,16.813126592968,18.811973656365,16.125639009249,16.319821612765,16.133130475571,15.645815325361,47.959257430490,14.794651735559,15.039496089307,47.715277338648,16.292914471412,52.471429799794,14.587400880866,51.196251473859,15.808955110960,50.165330269878,14.654312574415,51.829477886651,48.309936681925,51.855229997897,51.195168288521,13.848392654607,16.077345876106,15.782352145681,48.163254516647,51.232584188683,19.420798462542,50.587200856152,50.211489693907,14.341445477764,16.142324872446,49.118166116332,18.529415726448,50.551490359777,15.981646587388,47.796856091868,15.032246637422,14.250804226909,50.545898935466,51.342839410461,47.700052578218,15.589066388948,48.015648330821,16.425950238432,50.488325849342,51.891123127578,50.772895443838};
*/

data_type a0,a1,a2,a3;
data_type b=32.333;

data_type my_mixtures0[3][LIST_DEPTH];
data_type my_mixtures1[3][LIST_DEPTH];
data_type my_mixtures2[3][LIST_DEPTH];
data_type my_mixtures3[3][LIST_DEPTH];

data_type sample_param0[4];
data_type sample_param1[4];
data_type sample_param2[4];
data_type sample_param3[4];

int count=0;
int no_components0;
int no_components1;
int no_components2;
int no_components3;
#ifdef TESTING
#ifndef LINUX	
 double t1,t2,t3;
 StartCounter();
#else
struct timeval t1;
struct timeval t2;
struct timeval t3;

gettimeofday(&t1, NULL);
#endif

	IMM imm0(input0, sample_param0);
	imm0.Fit(my_mixtures0, no_components0);
	
	IMM imm1(input0, sample_param1);
	imm1.Fit(my_mixtures1, no_components1);

	IMM imm2(input0, sample_param2);
	imm2.Fit(my_mixtures2, no_components2);

	IMM imm3(input0, sample_param3);
	imm3.Fit(my_mixtures3, no_components3);
	
 
	printf("No of components:%d\n",no_components0); 
	printf("No of components:%d\n",no_components1);
	printf("No of components:%d\n",no_components2);
	printf("No of components:%d\n",no_components3);

#ifndef LINUX
	t1=GetCounter();
	std::cout <<"\n For the C++ GMM Init + FIt took:  " <<t1<<" msec" <<"\n\n";
#else
gettimeofday(&t2, NULL);
double dt_  = t2.tv_sec - t1.tv_sec + 1e-6 * (t2.tv_usec - t1.tv_usec);
std::cout <<"\n For the C++ GMM Init + FIt took:  " <<1000*dt_<<" msec" <<"\n\n";

#endif


//sample_param[0]=sample_mean;
//sample_param[1]=sample_sigma;
//sample_param[2]=sample_squared_sum;



std::queue <data_type> buff; //load queue with history
for (int i=0;i<INPUT_DEPTH;i++) buff.push(input0[i]);


getchar();

# ifdef _OPENMP

const double startTime = omp_get_wtime();
printf("Starting timer..");

printf("\n");
printf("***********************************************\n");
printf("Compiled by an OpenMP-compliant implementation.\n");

int tid,nthreads=0;
#pragma omp parallel private(nthreads,tid)
{

  /* Obtain thread number */
  tid = omp_get_thread_num();
    

  /* Only master thread does this */
  if (tid == 0) 
    {
    nthreads = omp_get_num_threads();
	
	printf("***********************************************\n");
    printf("Number of  real threads = %d\n", nthreads);
    }
}
printf("***********************************************\n");
 
#pragma omp parallel num_threads(THREAD_N) private(nthreads,tid)
{

	omp_set_num_threads(THREAD_N);

  /* Obtain thread number */
  tid = omp_get_thread_num();
    //printf("Hello World from thread = %d\n", tid);

  /* Only master thread does this */
  if (tid == 0) 
    {
    nthreads = omp_get_num_threads();
    printf("Number of virtual threads = %d\n", nthreads);
    }
}
printf("***********************************************\n");
# endif



  int count_loop=0;
 
data_type *IN_ARRAY0 = new data_type[210000];
data_type *OUT_ARRAY0= new data_type[210000];

data_type *IN_ARRAY1 = new data_type[210000];
data_type *OUT_ARRAY1= new data_type[210000];

data_type *IN_ARRAY2 = new data_type[210000];
data_type *OUT_ARRAY2= new data_type[210000];

data_type *IN_ARRAY3 = new data_type[210000];
data_type *OUT_ARRAY3= new data_type[210000];

//// Load arrays for Input to reduce a possible overhead due to fifo struct

for (int ii=0; ii<200; ii++) 
	for (int xi=4; xi<5; xi++) {
			for (int ki=0; ki<1000; ki++){

			int LO = 40 + 10*xi; //starts from 55

			int HI = LO + 5;
//			data_type r3 = LO + static_cast <float> (rand()) /( static_cast <float> (RAND_MAX/(HI-LO)));
			double rr =  (double)rand() / ((double)RAND_MAX + 1);
			data_type r3=input0[count%100];   

			if (count%99>100) printf("error\n");
			buff.push(r3);
			data_type r4=buff.front();

			IN_ARRAY0[count]=IN_ARRAY1[count]=IN_ARRAY2[count]=IN_ARRAY3[count]=r3;
			OUT_ARRAY0[count]=OUT_ARRAY1[count]=OUT_ARRAY2[count]=OUT_ARRAY3[count]=IN_ARRAY0[ abs(count-98) ];

			//a= imm0.Adaptation(r3, r4, my_mixtures, no_components, sample_param);//
			buff.pop();

			count++;
			//printf ("\nRETURNED: sample mu=%6.3f,  sample sigma=%6.3f, sample_squared_sum=%6.3f\n", sample_param[0], sample_param[1], sample_param[2]);
			//for (int i=0;i<no_components;i++) printf(" RETURNED: mix_pi= %3.6f,mix_mu= %3.6f, mix_sigma= %3.6f  \n", my_mixtures[0][i],  my_mixtures[1][i], my_mixtures[2][i]);
		
			}
		}

printf("Generated pixel values:%d\n", count);

IMM_Adaptation imm_ad0(0);
 
	
IMM_Adaptation imm_ad1(0);
 

IMM_Adaptation imm_ad2(0);
 

IMM_Adaptation imm_ad3(0);
 
#ifndef LINUX
t2=GetCounter();

#else
gettimeofday(&t2, NULL);

#endif



#pragma omp parallel sections num_threads(THREAD_N)
{

	#pragma omp section
	{

	//while(1) {i0++; }

  	  for ( int i0=0; i0<count; i0++) a0=imm0.Adaptation(IN_ARRAY0[i0], OUT_ARRAY0[i0], my_mixtures0, no_components0, sample_param0);//
  	// for ( int i=0; i<count; i++)  imm_ad0.Adaptation(IN_ARRAY[i], OUT_ARRAY[i], my_mixtures0, no_components0, sample_param0);//
 
	}
	#pragma omp section
	{
	//while(1){ i1++; }
    	 for ( int i1=0; i1<count; i1++) a1=imm1.Adaptation(IN_ARRAY1[i1], OUT_ARRAY1[i1], my_mixtures1, no_components1, sample_param1);//
 // 	 for ( int i=0; i<count; i++)  imm_ad1.Adaptation(IN_ARRAY[i], OUT_ARRAY[i], my_mixtures1, no_components1, sample_param1);//


	}
	#pragma omp section
	{
	// while(1) {i2++;}
    	 for ( int i=0; i<count; i++) a2=imm2.Adaptation(IN_ARRAY2[i], OUT_ARRAY2[i], my_mixtures2, no_components2, sample_param2);//
 //   	 for ( int i=0; i<count; i++)  imm_ad2.Adaptation(IN_ARRAY[i], OUT_ARRAY[i], my_mixtures2, no_components2, sample_param2);//

	}

	#pragma omp section
	{
	// while(1) {i3++;}
   	 for ( int i3=0; i3<count; i3++) a3=imm3.Adaptation(IN_ARRAY3[i3], OUT_ARRAY3[i3], my_mixtures3, no_components3, sample_param3);//
  //  	 for ( int i=0; i<count; i++)  imm_ad3.Adaptation(IN_ARRAY[i], OUT_ARRAY[i], my_mixtures3, no_components3, sample_param3);//


	}
}



#ifndef LINUX
	t3=GetCounter();
	count=count*4; //multiple instences
	printf ("Loop occurences=%d",count);
	std::cout <<"\n For the C++ Adaptation:  " <<t3-t2<<" msec, "<< "time per pixel="<<(t3-t2)/count <<" msec"<<"\n\n";
#else
	gettimeofday(&t3, NULL);
	dt_  = t3.tv_sec - t2.tv_sec + 1e-6 * (t3.tv_usec - t2.tv_usec);
	std::cout <<"\n For the C++ Adaptation:  " <<1000*dt_<<" msec" <<"\n\n";

	std::cout <<"\n For the C++ Adaptation per pixel:  " <<1000*dt_/count<<" msec" <<"\n\n";
#endif
	

	printf("No of components:%d\n",no_components0); 
	printf("No of components:%d\n",no_components1);
	printf("No of components:%d\n",no_components2);
	printf("No of components:%d\n",no_components3);

	getchar();



#endif //testing




return 1;
/*
IMM imm1(input1);
	imm1.Fit();

IMM imm2(input2);
	imm2.Fit();

IMM imm3(input3);
	imm3.Fit();

IMM imm4(input4);
	imm4.Fit();

IMM imm5(input5);
	imm5.Fit();

IMM imm6(input6);
	imm6.Fit();

IMM imm7(input7);
	imm7.Fit();

IMM imm8(input8);
	imm8.Fit();

IMM imm9(input9);
	imm9.Fit();



IMM imm10(input10);
	imm10.Fit();

IMM imm11(input11);
	imm11.Fit();

*/

}
